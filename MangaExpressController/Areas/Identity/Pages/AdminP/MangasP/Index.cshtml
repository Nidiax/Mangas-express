@page "{handler?}"
@model MangaExpressController.Areas.Identity.Pages.AdminP.MangasP.IndexModel

@{
    Layout = "_LayoutAdmin";
}

<head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.2/jspdf.min.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.6/jspdf.plugin.autotable.js" referrerpolicy="no-referrer" defer></script>
</head>

<div class="float-right mb-3">
    <a class="btn btn-light" onclick="demoFromHTML('mangas','mangas')" value="Descargar PDF">Descargar PDF</a>
</div>

<div class="float-right mb-3">
    <a asp-page="Create" class="btn btn-primary">Crear un manga</a>

</div>

<table id="mangas" class="table table-hover ">
    <thead  class="table-info">
        <tr>
            <th>Nombre</th>
            <th>Precio</th>
            <th>Descripción</th>
            <th>Autor</th>
            <th>Marca</th>
            <th>Imagen</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody id="mangas">
        @foreach (var manga in Model.MangaM)
        {
            <tr>
                <td>@manga.Nombre</td>
                <td>@manga.Precio</td>
                <td class="col-5">@(manga.Descripcion.Length>200?manga.Descripcion.Substring(0,150)+"...": manga.Descripcion)</td>
                <td>@manga.Autor</td>
                <td>@manga.Marca</td>
                <td><img src="@(string.IsNullOrEmpty(manga.Imagen)? Url.Content($"~/images/NoImage.png") :Url.Content($"~/images/{manga.Imagen}"))" alt="Imagen Manga" width="60" /></td>
                <td><a class="btn btn-sm btn-primary details" asp-page="Edit" asp-route-id="@manga.Id" >Editar</a> | <a asp-page-handler="Status" asp-route-id="@manga.Id" asp-route-status="@(!manga.Estatus)" class="btn btn-sm btn-danger">@(manga.Estatus? "Desactivar":"Activar")</a></td>
            </tr>
        }
    </tbody>
</table>

<script src="~/js/jquery-3.5.1.min.js"></script>
<script src="~/js/jspdf.debug.js"></script>

@section scripts {
    <script>
        function demoFromHTML() {
            var pdf = new jsPDF();
            pdf.autoTable({html: '#mangas'})
            pdf.save('Mangas.pdf');
            //// source can be HTML-formatted string, or a reference
            //// to an actual DOM element from which the text will be scraped.
            //source = $('.mangas')[0];
            //// we support special element handlers. Register them with jQuery-style
            //// ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
            //// There is no support for any other type of selectors
            //// (class, of compound) at this time.
            //specialElementHandlers = {
            //    // element with id of "bypass" - jQuery style selector
            //    '#bypassme': function (element, renderer) {
            //        // true = "handled elsewhere, bypass text extraction"
            //        return true
            //    }
            //};
            //margins = {
            //    top: 80,
            //    bottom: 60,
            //    left: 40,
            //    width: 522,
            //    width: 522,
            //    orientation: "landscape",

            //};
            //// all coords and widths are in jsPDF instance's declared units
            //// 'inches' in this case
            //pdf.fromHTML(
            //    source, // HTML string or DOM elem ref.
            //    margins.left, // x coord
            //    margins.top, { // y coord
            //    'width': margins.width, // max width of content on PDF
            //    'elementHandlers': specialElementHandlers
            //},
            //    function (dispose) {
            //        // dispose: object with X, Y of the last line add to the PDF
            //        //          this allow the insertion of new lines after html
            //        pdf.save('Mangas.pdf');
            //    }, margins);
        }

    </script>
}